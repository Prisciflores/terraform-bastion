name: Bastion Infra + Ansible Bootstrap  # Nombre del workflow visible en GitHub

# 🔁 Se ejecuta manualmente desde GitHub (workflow_dispatch)
on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Acción a ejecutar'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy  # Puedes elegir entre aplicar o destruir la infraestructura

env:
  TF_WORKING_DIR: ./  # Directorio donde está el código Terraform

jobs:
  terraform:
    name: Terraform Plan & Apply
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}  # Todos los comandos se ejecutan desde la raíz del módulo

    steps:
      # 🔄 Clona el repositorio
      - name: Checkout repo
        uses: actions/checkout@v3

      # ⚙️ Instala Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      # 🧱 Inicializa Terraform
      - name: Terraform Init
        run: terraform init

      # 🎨 Verifica formato del código
      - name: Terraform Format
        run: terraform fmt -check

      # 🧪 Valida sintaxis
      - name: Terraform Validate
        run: terraform validate

      # 🔍 Planifica cambios sin aplicarlos aún
      - name: Terraform Plan
        run: terraform plan -var-file="terraform.tfvars"

      # ⏳ Espera aprobación manual antes del apply
      - name: Await manual approval
        if: github.event.inputs.action == 'apply'
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          environment: production
          reviewers: priscilaflores  # Cambia esto por tu usuario si es distinto

      # ✅ Aplica cambios si se eligió "apply"
      - name: Terraform Apply
        if: github.event.inputs.action == 'apply'
        run: terraform apply -auto-approve -var-file="terraform.tfvars"

      # 💣 Destruye la infraestructura si se eligió "destroy"
      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        run: terraform destroy -auto-approve -var-file="terraform.tfvars"

      # 🌐 Obtiene la IP pública de la instancia bastión
      - name: Get Bastion IP
        if: github.event.inputs.action == 'apply'
        id: bastion_ip
        run: |
          IP=$(terraform output -raw bastion_public_ip)
          echo "BASTION_IP=$IP" >> $GITHUB_ENV  # La exporta como variable de entorno
          echo "::set-output name=ip::$IP"      # También la deja como output para otros jobs
        outputs:
          bastion_ip: ${{ steps.bastion_ip.outputs.ip }}

  ansible:
    name: Ansible Bootstrap
    needs: terraform  # Solo se ejecuta si el job terraform terminó exitosamente
    runs-on: ubuntu-latest
    if: github.event.inputs.action == 'apply'  # Solo se ejecuta en caso de apply
    defaults:
      run:
        working-directory: ./ansible-bootstrap/playbooks  # Ejecuta desde donde está bootstrap.yml

    steps:
      # 🔄 Clona el repositorio
      - name: Checkout repo
        uses: actions/checkout@v3

      # 🧰 Instala Ansible
      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      # 🖥️ Muestra la IP de la instancia bastión
      - name: Show Bastion IP
        run: echo "Target: ${{ needs.terraform.outputs.bastion_ip }}"

      # 🔐 Crea la clave privada desde el GitHub Secret
      - name: Crear clave privada desde secret
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/priscila-key.pem
          chmod 600 ~/.ssh/priscila-key.pem

      # 📄 Genera inventario dinámico usando la IP pública de la bastión
      - name: Generar archivo de inventario
        run: |
          echo "[bastion]
          ${{ needs.terraform.outputs.bastion_ip }} ansible_user=ec2-user ansible_ssh_private_key_file=~/.ssh/priscila-key.pem" > inventory/hosts

      # 🚀 Ejecuta el playbook de Ansible desde el directorio playbooks
      - name: Ejecutar playbook
        run: ansible-playbook -i inventory/hosts bootstrap.yml



